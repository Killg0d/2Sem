#include<iostream>
using namespace std;
struct triplet
{
        int r,c,value;
};
int main()
{
        int row,col,a[5][5],count=0;
        cout<<"Enter the order of matrix(row,col):";
        cin>>row>>col;
        cout<<"\nEnter the elements of matrix:";
        for(int i=0;i<row;i++)
        {
                for(int j=0;j<col;j++)
                {
                        cin>>a[i][j];
                }
        }
        cout<<"Contents of the 2D Matrix:\n";
        for(int i=0;i<row;i++)
        {
                for(int j=0;j<col;j++)
                {
                        if(a[i][j]!=0)
                                                                          count++;
                        cout<<a[i][j]<<"\t";
                }
                cout<<endl;
        }
        //cout<<count;
        triplet t1[count+1];
        int k=1;
        t1[0].r=row;t1[0].c=col;t1[0].value=count;
        for(int i=0;i<row;i++)
        {
                for(int j=0;j<col;j++)
                {
                        if(a[i][j]!=0)
                        {
                                t1[k].r=i;
                                t1[k].c=j;
                                t1[k++].value=a[i][j];
                        }
                }
        }
        //cout<<count;
        cout<<"\nRow\tColumn\tValue\n";
        for(int i=0;i<count+1;i++)
        {
                cout<<t1[i].r<<"\t"<<t1[i].c<<"\t"<<t1[i].value<<endl;
        }
        cout<<"\nReconstructing";
        int brow,bcol;
        brow=t1[0].r;
        bcol=t1[0].c;
        int b[brow][bcol];
        int rt=1;
        for(int i=0;i<brow;i++)
        {
                for(int j=0;j<bcol;j++)
                {
                        if((t1[rt].r==i) && (t1[rt].c==j))
                        {
                                b[i][j]=t1[rt++].value;
                        }
                        else
                                b[i][j]=0;
                }
        }
        cout<<"\nContents of the 2D Matrix:\n";
        for(int i=0;i<row;i++)
        {
                for(int j=0;j<col;j++)
                {
                        cout<<b[i][j]<<"\t";
                }
                cout<<endl;
        }
        cout<<endl;
        return 0;
}
#include<iostream>
using namespace std;
struct poly
{
        int coef,expo;
};
int main()
{
        int terms;
        //Read first polynomial
        cout<<"\nEnter polynomial 1:";
        cout<<"\nEnter number of terms:";
        cin>>terms;
        poly p1[terms];
        p1[0].coef=terms;
        for(int i=1;i<=p1[0].coef;i++)
        {
                cout<<"\nEnter the coefficient:";
                cin>>p1[i].coef;
                cout<<"\nEnter the exponent:";
                cin>>p1[i].expo;
        }
        cout<<"\nThe first polynomial is: ";
        for(int i=1;i<=p1[0].coef;i++)
        {
                cout<<p1[i].coef<<"x^"<<p1[i].expo<<"+";
        }
        //Read 2nd polynomial
        cout<<"\nEnter polynomial 2:";
        cout<<"\nEnter number of terms:";
        cin>>terms;
        cout<<terms;
        poly p2[terms];
        p2[0].coef=terms;
        for(int i=1;i<=p2[0].coef;i++)
        {
                cout<<"\nEnter the coefficient:";
                cin>>p2[i].coef;
                cout<<"\nEnter the exponent:";
                cin>>p2[i].expo;
        }
        cout<<"\nThe second polynomial is: ";
        for(int i=1;i<=p2[0].coef;i++)
        {
                cout<<p2[i].coef<<"x^"<<p2[i].expo<<"+";
        }
        //add 2 poly
        int size=1;
        poly p3[p1[0].coef+p2[0].coef];
        int x=1;
        int y=1;//x points to p1 y points to p2
        while(x<=p1[0].coef && y<=p2[y].coef)
        {
                          cout<<x<<"x "<<y<<"y"<<endl;
                if(p1[x].expo>p2[y].expo)
                {
                        p3[size].coef=p1[x].coef;
                        p3[size++].expo=p1[x].expo;
                        cout<<"count"<<size<<endl;
                        x++;
                }
                else if (p1[x].expo<p2[y].expo)
                {
                        p3[size].coef=p2[y].coef;
                        p3[size++].expo=p2[y].expo;
                         cout<<"count"<<size<<endl;
                        y++;
                }
                else
                {
                        p3[size].coef=p1[x].coef+p2[y].coef;
                        p3[size++].expo=p1[x].expo;
                        x++;y++;
                }
        }
        /*while(x>=0)
        {
                p3[size].coef=p1[x].coef;
                p3[size++].expo=p1[x--].expo;
        }
        while(y>=0)
  {
                p3[size].coef=p2[y].coef;
                p3[size++].expo=p2[y--].expo;
        }*/
        p3[0].coef=size-1;
        cout<<p3[0].coef<<" The size";
        cout<<"\nThe output polynomial is: ";
        for(int i=1;i<=p3[0].coef;i++)
        {
                cout<<p3[i].coef<<"x^"<<p3[i].expo<<"+";
        }
        cout<<endl;
        return 0;
}
                                                                  